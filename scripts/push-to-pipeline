#!/bin/ash
set -e

# Check for required env vars
if [ -z "$CODEBUILD_S3_BUCKET" ]; then
  echo "CODEBUILD_S3_BUCKET must be set"
  missing_vars=true
fi

if [ -z "$CODEPIPELINE_S3_BUCKET" ]; then
  echo "CODEPIPELINE_S3_BUCKET must be set"
  missing_vars=true
fi

if [ -z "$CODEPIPELINE_S3_ARCHIVE_KEY" ]; then
  echo "CODEPIPELINE_S3_ARCHIVE_KEY must be set"
  missing_vars=true
fi

if [ -z "$CODEBUILD_S3_RESULT_PATH" ]; then
  echo "CODEBUILD_S3_RESULT_PATH must be set"
  missing_vars=true
fi

if [ $missing_vars = true ]; then
  exit 1
fi

aws configure set s3.signature_version s3v4

# Detect CI environment: either BITBUCKET or GITLAB_CI
if [ -n "$BITBUCKET_COMMIT" ]; then
  codebuild_result_file="$BITBUCKET_REPO_OWNER-$BITBUCKET_REPO_SLUG-$BITBUCKET_COMMIT.json";
elif [ -n "$GITLAB_CI" ]; then
  codebuild_result_file="$CI_PROJECT_NAMESPACE-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA.json";
fi

echo $CODEBUILD_S3_BUCKET;

## Fetch Codebuild result file generated by previous codebuild job on selected commit
aws s3api get-object \
  --bucket $CODEBUILD_S3_BUCKET \
  --key "$CODEBUILD_S3_RESULT_PATH/$codebuild_result_file" \
  _codebuild_result_file;

## Extract codebuild artifacts location from fetched codebuild result file
artifacts_s3_location=`jq -r -c '.artifacts.location' _codebuild_result_file`;

## Extract artifacts S3 bucket and key
artifacts_s3=`echo $artifacts_s3_location | awk -F: '{print $6}'`
artifacts_s3_bucket=`echo $artifacts_s3 | cut -d '/' -f 1`;
artifacts_s3_key=`echo $artifacts_s3 | cut -d '/' -f 2-`;

mkdir _artifacts;
cd _artifacts;

## Fetch artifact files in current dir
echo "s3://$artifacts_s3_bucket/$artifacts_s3_key";
files=`aws s3 sync s3://$artifacts_s3_bucket/$artifacts_s3_key .`
echo $files;

is_zip="false"
num_files=`ls -1 | wc -l`

## Identify whether we need to zip the artifacts files
if [ num_files == "1" ]; then
  first_file=`ls | sort -n | head -1`
  file_type=`type $first_file`
  if [ $file_type == *"Zip"* ]; then
    is_zip="true"
    mv $first_file _pipeline.zip
  fi
fi

echo "Is this a zip file? " $is_zip
if [ $is_zip == "false" ]; then
  zip -r _pipeline.zip .
fi

echo "Final file list"
ls -al

## Put artifacts archive file on user provided codepipeline bucket/key
aws s3api put-object \
  --body _pipeline.zip \
  --bucket $CODEPIPELINE_S3_BUCKET \
  --key $CODEPIPELINE_S3_ARCHIVE_KEY;
